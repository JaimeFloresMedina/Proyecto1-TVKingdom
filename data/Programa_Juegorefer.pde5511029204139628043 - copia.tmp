int pantalla =0;
int numJ = 0;
int numJ1 = -1;
int numJ2 = -1;
int k = 100;
int l = 100;
float n;
int numero = 1;
int turno = 1;
int ataque =0;
int jug1x = -30;
int jug1y =0;
int jug2x = 330;
int jug2y = 0;
int jugador;



class Personaje {
  //atributos

  float p=0;
  float z= 0;
  int vida =300;
  int dibujar;
  int jugador ;
  int nivel, fuerza, cuerpo, vf, defensa;
  String nombre;





  Personaje (String nombre, int fuerza, int defensa, int dibujar, int jugador ) {
    this.nombre = nombre;
    this.fuerza= fuerza;
    this.dibujar=dibujar;
    this.defensa=defensa;
    this.jugador = jugador;
  }

  //display
  void mostrar(int dibujar, int xt, int yt, float esc) {

    pushMatrix();
    scale(esc);
    translate(xt, yt);
    switch (dibujar) {
    case 0:
      //aro
      noStroke();
      fill(#F7B59B);
      rect(165, 225, 10, 70);
      rect(225, 225, 10, 70);
      ellipse(230, 295, 10, 10);
      ellipse(170, 295, 10, 10);
      rect(185, 330, 13, 30);
      rect(205, 330, 13, 30);
      ellipse(187, 360, 20, 10);
      ellipse(215, 360, 20, 10);
      fill(#B9EFFF);
      ellipse(170, 225, 20, 20);
      ellipse(230, 225, 20, 20);
      quad(170, 225, 230, 225, 220, 330, 180, 330);
      for (p=12.5; p<50; p+=12.5) {
        triangle(168.5+p, 330, 181+p, 330, 174.75+p, 340);
      }
      fill(0);
      ellipse(200, 200, 50, 50);
      rect(175, 200, 50, 70);
      for (p=12.5; p<=50; p+=12.5) {
        triangle(163+p, 270, 175.5+p, 270, 169.25+p, 280);
      }
      break;
    case 1:
      //pacman
      fill(#FFCD00);
      noStroke();
      quad(200, 250, 150, 280, 140, 270, 190, 240);
      quad(150, 280, 115, 250, 110, 260, 140, 280);
      rect(180, 290, 15, 50);
      rect(205, 290, 15, 50);
      ellipse (200, 250, 100, 100);
      fill(255, 0, 0);
      triangle(200, 320, 230, 320, 203, 350);
      triangle(175, 330, 200, 330, 194, 355);
      ellipse(180, 350, 30, 25);
      ellipse(220, 350, 35, 35);
      fill(0);
      arc(190, 255, 70, 70, 1/PI, PI, CHORD);
      fill(255, 0, 0);
      ellipse(190, 280, 30, 15);
      fill(0);
      ellipse(180, 230, 15, 25);
      ellipse(210, 230, 15, 25);
      fill(#FFCD00);
      triangle(170, 235, 170, 225, 185, 230);
      triangle(200, 235, 200, 225, 215, 230);
      fill(255, 0, 0);
      ellipse(115, 250, 30, 30);
      ellipse(250, 270, 40, 40);
      break;
    case 2:
      //fuerte
      int v=-65; 
      noStroke();
      fill(#F7B59B);
      triangle(125, 190-v, 150, 190-v, 140, 140-v);
      fill(255, 0, 0);
      ellipse(145, 145-v, 30, 30);
      ellipse(148, 153-v, 30, 20);
      fill(#F7B59B);
      triangle(250, 190-v, 275, 190-v, 265, 140-v);
      fill(255, 0, 0);
      ellipse(260, 145-v, 30, 30);
      ellipse(257, 150-v, 30, 20);
      fill(#F7B59B);
      ellipse(250, 190-v, 50, 40);
      ellipse(187, 270-v, 20, 50);
      ellipse(213, 270-v, 20, 50);
      fill(250, 0, 0);
      ellipse(200, 250-v, 50, 40);
      fill(255);
      ellipse (200, 200-v, 100, 100);
      fill(#F7B59B);
      ellipse(150, 190-v, 50, 40);
      noStroke();
      ellipse (200, 150-v, 40, 50);
      fill(180, 0, 0);
      ellipse(180, 290-v, 40, 20);
      ellipse(223, 290-v, 40, 20);
      fill(255);
      stroke(2);
      ellipse(190, 140-v, 10, 10);
      ellipse(210, 140-v, 10, 10);
      fill(0);
      ellipse(190, 140-v, 3, 3);
      ellipse(210, 140-v, 3, 3);
      strokeWeight(2);
      line(188, 199, 198, 202);
      line(187, 217, 202, 222);
      break;
    case 3:
      //mago
      noStroke();

      fill(#F7B59B);
      rect(168, 247, 10, 60);
      rect(222, 247, 10, 60);
      fill(#F7B59B);
      rect(183, 302, 10, 60);
      rect(207, 301, 10, 60);
      ellipse(172, 305, 10, 10);
      ellipse(229, 308, 10, 10);
      ellipse(184, 362, 19, 10);
      ellipse(217, 361, 19, 10);
      fill(#062c5b);
      ellipse(178, 249, 20, 18);
      ellipse(221, 247, 21, 15);
      fill(#062c5b);
      quad(180, 240, 220, 240, 230, 320, 170, 320);
      rect(170, 320, 60, 25);
      fill(#F7B59B);
      ellipse(200, 220, 48, 50);
      fill(9);
      ellipse(191, 220, 10, 10);
      ellipse(208, 220, 10, 10);
      fill(0, 0, random(150, 220));
      triangle(175, 220, 225, 220, 200, 120);
      fill(208);
      triangle(185, 238, 215, 238, 199, 300);
      break;
    case 4:
      //domo
      int d =30;

      fill(#523509);
      rect(200, 350-d, 40, 50);
      rect(260, 350-d, 40, 50);
      rect(300, 270-d, 20, 70);
      fill(#523509);
      ellipse(210, 255-d, 70, 80);
      fill(255, 255, 255);
      ellipse(210, 255-d, 30, 40);
      fill(#523509);
      rect(200, 200-d, 100, 150);
      fill(255, 0, 0);
      rect(225, 250-d, 50, 40);
      fill(0);
      ellipse(225, 220-d, 10, 10);
      ellipse(275, 220-d, 10, 10);
      fill(255);
      triangle(225, 250-d, 237.5, 250-d, 231.25, 260-d);
      for (z=12.5; z<50; z+=12.5) {
        triangle(225+z, 250-d, 237.5+z, 250-d, 231.25+z, 260-d);
        triangle(225+z, 290-d, 237.5+z, 290-d, 231.25+z, 280-d);
      }
      triangle(225, 290-d, 237.5, 290-d, 231.25, 280-d);
      fill(#523509);
      ellipse(200, 230-d, 30, 30);

      break;
    }
    popMatrix();
  }


  void vida() {
    if (jugador == 1) {
      noStroke();
      fill(#DEDEDE);
      rect(300, 0, -300, 15, 10, 10, 10, 10);
      fill(#DE0206);
      rect(300, 0, -jugador1.vida, 15, 10, 10, 10, 10);
      fill(255);
      text(jugador1.vida, 5, 40);
    }
    if (jugador == 2) {
      noStroke();
      fill(#DEDEDE);
      rect(400, 0, 300, 15, 10, 10, 10, 10);
      fill(#DE0206);
      rect(400, 0, jugador2.vida, 15, 10, 10, 10, 10);
      fill(255);
      text(jugador2.vida, 640, 40);
    }
  }

  void golpeFisico1() {


    int ran = (int)random(4, 6);
    int dano1 =10;
    int dano2 =10;
    int t1 = (int)random(10, 12);
    int t2 = (int)random(10, 12);
    dano1= (t1*ran+dano1);
    dano2 =(t2*ran+dano2);
    println(dano1);
    if (jugador==1) {
      ataque = ataque+5;
      golpe(500, 200);
      if (ataque==200) {
        jugador2.vida=jugador2.vida-dano1;
        ataque=0;
        dano1 = 0;
        turno=2;
        key = 0;
      }
    }


    if (jugador==2) {
      println(dano2);
      ataque = ataque+5;
      golpe(200, 200);
      if (ataque==200) {

        jugador1.vida=jugador1.vida-dano2;
        ataque=0;
        dano2=0;
        turno=1;
        key = 0;
      }
    }
  }

  void golpeFisico2() {

    int ran2 ;
    float dano2 ;

    ran2 = floor(random(3));
    dano2 = aro.fuerza*.5*ran2;
    golpe(200, 200);
    jugador2.vida=jugador2.vida -ceil(dano2);
    turno=1;
    if (ran2 == 0) {
      text("golpe fallido", 200, 350);
    }
  }
}


class Pantallas {
  int i, j;
  PFont font;
  PFont font1;


  void pInicio() {
    background(0);
    noStroke();
    fill(#F4FC08);
    rect(0, 0, 100, 500);
    fill(#05FC8F);
    rect(100, 0, 100, 500);
    fill(#25FC05);
    rect(200, 0, 100, 500);
    fill(#05BCFC);
    rect(300, 0, 100, 500);
    fill(#F51900);
    rect(400, 0, 100, 500);
    fill(#004D7E);
    rect(500, 0, 100, 500);
    fill(#78007E);
    rect(600, 0, 100, 500);
    fill(0);
    rect(200, 300, 300, 100, 10, 10, 0, 0);
    font = createFont("BIT.ttf", 10);

    textFont(font);
    textSize(100);
    fill(0);
    text(" KINGDOM", 130, 190);
    fill(255);
    text(" KINGDOM", 135, 195);
    fill(0);

    text("TV ", 280, 90);
    fill(0);
    rect(100, 400, 500, 50, 10, 10, 10, 10);
    fill(255);
    text("TV ", 285, 95);
    fill(255);
    textSize(30);
    text("Presiona 'Enter' \n para comenzar", 235, 345);
  }
  void pSeleccion() {

    n+=0.1;
    background(0, 0, 100);


    noStroke();
    fill(50, 0, 0);
    quad(100, 100, 600, 100, 500, 50, 50, 50);
    fill(65, 0, 0);
    quad(100, 100, 50, 50, 50, 180, 100, 230);
    fill(120, 0, 0);
    rect(100, 100, 500, 130, 0, 0, 10, 0);
  }
  void pCombate() {

    background(255);
    for (this.i = 0; this.i<700; this.i+=20) {
      for (this.j = 0; this.j<500; this.j+=20) {

        noStroke();
        fill(0, 0, random(10, 255));
        rect(this.i, this.j, 20, 20);
      }
    }
    fill(0, 0, 0, 50);
    rect(0, 0, 700, 500);
    fill(random(10, 200), 0, 0);
    rect(340, 0, 20, 500);
    textSize(30);
    rect(0, 400, 700, 100, 10, 10, 0, 0);
  }
  void pFinal() {
    background(255);
    for (int k = 0; k<700; k+=10) {
      for (int l = 0; l<500; l+=5) {
        noStroke();
        fill(random(200));
        rect(k, l, 10, 5);
      }
    }
    fill(0);
    rect(200, 50, 300, 100);
    fill(255);
    textSize(50);
    text("GAME OVER", 210, 120);
  }
  void seleccionador(int kt, int lt) {

    pushMatrix();
    translate(kt, lt);
    for ( int k = 0; k<100; k+=10) {
      for ( int l = 0; l<130; l+=5) {
        noStroke();
        fill(random(200));
        rect(k, l, 10, 5);
      }
    }
    popMatrix();
  }
}

void corazon(float sca, int xt, int yt) {
  pushMatrix();
  translate(xt, yt);
  scale(sca);
  smooth();
  noStroke();
  fill(255, 0, 0);
  beginShape();
  vertex(50, 15); 
  bezierVertex(50, -5, 90, 5, 50, 40); 
  vertex(50, 15); 
  bezierVertex(50, -5, 10, 5, 50, 40); 
  endShape();
  popMatrix();
}
void reinicio() {
  this.numJ1 = -1;
  this.numJ2 = -1;
  jugador1.vida=300;
  jugador2.vida=300;
  this.turno = 1;
  this.numJ1 = -1;
  numJ2 = -1;
  numJ = 0;
  numero = 1;
  k = 100;
  l = 100;
}

void golpe(int x, int y) {

  pushMatrix();
  translate(x, y );
  pushMatrix();

  noStroke();
  fill(255, 255, 0);
  ellipse(0, 0, 60, 60);
  quad(0, 0, -10, -30, 0, -60, 10, -30);
  quad(0, 0, -10, 30, 0, 60, 10, 30);
  quad(0, 0, -30, -10, -60, 0, -30, 10);
  quad(0, 0, 30, -10, 60, 0, 30, 10);
  pushMatrix();
  rotate(-.8);
  quad(0, 0, -10, -30, 0, -60, 10, -30);
  quad(0, 0, -10, 30, 0, 60, 10, 30);
  quad(0, 0, -30, -10, -60, 0, -30, 10);
  quad(0, 0, 30, -10, 60, 0, 30, 10);
  popMatrix();
  popMatrix();

  scale(.7);
  noStroke();
  fill(255, 155, 0);
  ellipse(0, 0, 60, 60);
  quad(0, 0, -10, -30, 0, -60, 10, -30);
  quad(0, 0, -10, 30, 0, 60, 10, 30);
  quad(0, 0, -30, -10, -60, 0, -30, 10);
  quad(0, 0, 30, -10, 60, 0, 30, 10);
  pushMatrix();
  rotate(-.8);
  quad(0, 0, -10, -30, 0, -60, 10, -30);
  quad(0, 0, -10, 30, 0, 60, 10, 30);
  quad(0, 0, -30, -10, -60, 0, -30, 10);
  quad(0, 0, 30, -10, 60, 0, 30, 10);
  popMatrix();
  popMatrix();
}



void keyPressed() {
  if (pantalla == 1) {
    if (numJ >=0 && numJ<=4)
    {
      if (keyCode==RIGHT) {
        if (numJ == 4) { 
          return;
        }
        k=k+100;
        numJ = numJ+1;
        key=0;
      }

      if (keyCode == LEFT) {
        if (numJ == 0) {
          return;
        }
        k=k-100;
        numJ = numJ-1;
        key=0;
      }


      if (numJ1 == -1) {
        if (key == '\n') {
          numJ1 = numJ;
          numJ2 = -2;
          numJ = 0;
          k = 100;
          l = 100;
          key = 0;
        }
      }

      if (numJ2 == -2) {       
        if (key == '\n') {
          numJ2 = numJ;
          numJ= 0;
          key = 0;  
          pantalla= 2;
        }
      }
    }
  }
  if (pantalla==2) {
    if (jugador1.vida<=0 ||jugador2.vida<=0)
    {

      if (key=='r') {
        reinicio();
        pantalla=1;
      }
    }
  }
}









Pantallas pInicio, pSeleccion, pCombate;
Pantallas pFinal, seleccionador;
Personaje aro;
Personaje pacman;
Personaje jugador1;
Personaje jugador2;
Personaje fuerte;
Personaje mago;
Personaje domo;




void setup() {
  size(700, 500);


  pInicio = new Pantallas();
  pSeleccion = new Pantallas();
  pCombate = new Pantallas();
  pFinal = new Pantallas();
  seleccionador = new Pantallas();
  aro = new Personaje ("Samara Morgan", 15, 10, 0, 0);
  pacman = new Personaje ("Pacman", 15, 10, 1, 0);
  jugador1 = new Personaje ("", 0, 0, 0, 1);
  jugador2 = new Personaje ("", 0, 0, 0, 2);
  fuerte = new Personaje ("Butterbean", 17, 5, 0, 0);
  mago = new Personaje ("Julius Dein", 10, 10, 0, 0);
  domo = new Personaje ("Domo", 18, 10, 0, 0);
}



void draw () {

  if (pantalla ==0) {
    pInicio.pInicio();
    if (keyCode==ENTER) {
      pantalla =1;
    } else {
      key =0;
    }
  }

  if (pantalla == 1) {
    pSeleccion.pSeleccion();
    seleccionador.seleccionador(k, l);



    aro.mostrar(0, 50, 0, 0.6);
    pacman.mostrar(1, 270, 30, 0.55);
    fuerte.mostrar(2, 385, 0, 0.6);
    mago.mostrar(3, 700, 80, 0.5);
    domo.mostrar(4, 850, 70, 0.5);


    fill(255);
    textSize(30);
    if (numJ==0) {
      text(aro.nombre, 200, 400);
    }
    if (numJ==1) {
      text(pacman.nombre, 200, 400);
    }
    if (numJ==2) {
      text(fuerte.nombre, 200, 400);
    }
    if (numJ==3) {
      text(mago.nombre, 200, 400);
    }
    if (numJ==4) {
      text(domo.nombre, 200, 400);
    }

    if (numJ1==-1) {
      fill(255);
      textSize(20);
      text("JUGADOR 1", 200, 30);
    }
    if (numJ2==-2) {
      fill(255);
      textSize(20);
      text("JUGADOR 2", 200, 30);
    }
  }

  if (pantalla == 2) {
    pCombate.pCombate();

    jugador1.vida();
    jugador2.vida();
    corazon(.5, 50, 20);
    corazon(.5, 600, 20);

    jugador1.mostrar(numJ1, jug1x, jug1y, 1);
    jugador2.mostrar(numJ2, jug2x, jug2y, 1);


    fill(#FCE90D);
    rect(300, 0, 100, 30, 10, 10, 10, 10);
    fill(255, 0, 0);
    text("VS", 330, 25);

    if (numJ1==0) {
      text(aro.nombre, 100, 50);
    }
    if (numJ1==1) {
      text(pacman.nombre, 100, 50);
    }
    if (numJ1==2) {
      text(fuerte.nombre, 100, 50);
    }
    if (numJ1==3) {
      text(mago.nombre, 100, 50);
    }
    if (numJ1==4) {
      text(domo.nombre, 100, 50);
    }
    if (numJ2==0) {
      text(aro.nombre, 400, 50);
    }
    if (numJ2==1) {
      text(pacman.nombre, 400, 50);
    }
    if (numJ2==2) {
      text(fuerte.nombre, 400, 50);
    }
    if (numJ2==3) {
      text(mago.nombre, 400, 50);
    }
    if (numJ2==4) {
      text(domo.nombre, 400, 50);
    }


    if (jugador1.vida>0 && jugador2.vida>0) {

      if (turno==1) {
        fill(255);
        text("Tu turno", 100, 450);
      }
      if (turno==2) {
        fill(255);
        text("Tu turno", 500, 450);
      }
      if (key=='b') {

        if (turno==1) { 
          jugador1.golpeFisico1();
        }
        if (turno==2) {
          jugador2.golpeFisico1();
        }
      }
    }

    if (jugador1.vida<=0) {
      jugador1.vida=0;
      fill(255, 255, 0);
      rect(420, 60, 180, 100, 10, 10, 10, 10);
      textSize(30); 
      fill(0);
      text(" GANADOR: \n JUGADOR 2 ", 420, 100);
      fill(255);
      text("Presiona la tecla r para reiniciar", 150, 470);
    }
    if (jugador2.vida<=0) {
      jugador2.vida=0;
      fill(255, 255, 0);
      rect(80, 60, 180, 100, 10, 10, 10, 10);
      textSize(30); 
      fill(0);
      text(" GANADOR: \n JUGADOR 1 ", 80, 100);
      fill(255);
      text("Presiona la tecla r para reiniciar", 150, 470);
    }
  }
}
